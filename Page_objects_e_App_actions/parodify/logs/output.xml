<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.2 on win32)" generated="20210308 15:35:12.203" rpa="false">
<suite id="s1" name="Login" source="C:\RobotFrameworkTests\rfw\parodify\tests\login.robot">
<test id="s1-t1" name="Login com sucesso">
<kw name="Abrir pagina de login em headless" library="login">
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>https://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210308 15:35:16.756" level="INFO">Successfully initialized new page object and opened url: https://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210308 15:35:12.972" endtime="20210308 15:35:16.756"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:12.972" endtime="20210308 15:35:16.756"></status>
</kw>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>label[for=user_email]</arg>
<arg>contains</arg>
<arg>Email</arg>
</arguments>
<status status="PASS" starttime="20210308 15:35:16.757" endtime="20210308 15:35:16.815"></status>
</kw>
<kw name="Fazer login com" library="login">
<arguments>
<arg>papito@parodify.com</arg>
<arg>pwd123</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>${email}</arg>
</arguments>
<msg timestamp="20210308 15:35:16.817" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210308 15:35:16.817" endtime="20210308 15:35:16.851"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_password</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20210308 15:35:16.852" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210308 15:35:16.851" endtime="20210308 15:35:16.868"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=input[value="Log in"]</arg>
</arguments>
<status status="PASS" starttime="20210308 15:35:16.868" endtime="20210308 15:35:17.585"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:16.816" endtime="20210308 15:35:17.585"></status>
</kw>
<kw name="Logout link deve estar visÃ­vel" library="pagina_logada">
<kw name="Wait For Elements State" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Wait</tag>
</tags>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<arguments>
<arg>${LOGOUT}</arg>
<arg>visible</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20210308 15:35:17.859" level="INFO">Wait for Element with selector: css=a[href$=sign_out]</msg>
<status status="PASS" starttime="20210308 15:35:17.587" endtime="20210308 15:35:17.860"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:17.586" endtime="20210308 15:35:17.861"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210308 15:35:18.113" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-49.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-49.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210308 15:35:17.862" endtime="20210308 15:35:18.113"></status>
</kw>
<tags>
<tag>test1</tag>
</tags>
<status status="PASS" starttime="20210308 15:35:12.956" endtime="20210308 15:35:18.114" critical="yes"></status>
</test>
<test id="s1-t2" name="Senha incorreta">
<kw name="Abrir pagina de login em headless" library="login">
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>https://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210308 15:35:20.958" level="INFO">Successfully initialized new page object and opened url: https://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210308 15:35:18.170" endtime="20210308 15:35:20.958"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:18.170" endtime="20210308 15:35:20.958"></status>
</kw>
<kw name="Fazer login com" library="login">
<arguments>
<arg>papito@parodify.com</arg>
<arg>senha1231</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>${email}</arg>
</arguments>
<msg timestamp="20210308 15:35:20.958" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210308 15:35:20.958" endtime="20210308 15:35:20.996"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_password</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20210308 15:35:20.996" level="INFO">Fills the text 'senha1231' in the given field.</msg>
<status status="PASS" starttime="20210308 15:35:20.996" endtime="20210308 15:35:21.025"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=input[value="Log in"]</arg>
</arguments>
<status status="PASS" starttime="20210308 15:35:21.026" endtime="20210308 15:35:21.700"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:20.958" endtime="20210308 15:35:21.701"></status>
</kw>
<kw name="Mensagem de validacao login" library="login">
<arguments>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>${expect_arg}</arg>
</arguments>
<status status="PASS" starttime="20210308 15:35:21.703" endtime="20210308 15:35:21.977"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:21.702" endtime="20210308 15:35:21.977"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210308 15:35:22.326" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-50.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-50.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210308 15:35:21.978" endtime="20210308 15:35:22.326"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:18.166" endtime="20210308 15:35:22.327" critical="yes"></status>
</test>
<test id="s1-t3" name="Email inesistente">
<kw name="Abrir pagina de login em headless" library="login">
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>https://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210308 15:35:25.198" level="INFO">Successfully initialized new page object and opened url: https://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210308 15:35:22.376" endtime="20210308 15:35:25.198"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:22.376" endtime="20210308 15:35:25.198"></status>
</kw>
<kw name="Fazer login com" library="login">
<arguments>
<arg>404@gmail.com</arg>
<arg>senha1231</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>${email}</arg>
</arguments>
<msg timestamp="20210308 15:35:25.200" level="INFO">Fills the text '404@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210308 15:35:25.199" endtime="20210308 15:35:25.238"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_password</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20210308 15:35:25.238" level="INFO">Fills the text 'senha1231' in the given field.</msg>
<status status="PASS" starttime="20210308 15:35:25.238" endtime="20210308 15:35:25.257"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=input[value="Log in"]</arg>
</arguments>
<status status="PASS" starttime="20210308 15:35:25.257" endtime="20210308 15:35:25.714"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:25.199" endtime="20210308 15:35:25.715"></status>
</kw>
<kw name="Mensagem de validacao login" library="login">
<arguments>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>${expect_arg}</arg>
</arguments>
<status status="PASS" starttime="20210308 15:35:25.717" endtime="20210308 15:35:25.990"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:25.716" endtime="20210308 15:35:25.991"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210308 15:35:26.348" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-51.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-51.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210308 15:35:25.991" endtime="20210308 15:35:26.348"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:22.367" endtime="20210308 15:35:26.348" critical="yes"></status>
</test>
<test id="s1-t4" name="Email nÃ£o informado">
<kw name="Abrir pagina de login em headless" library="login">
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>https://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210308 15:35:29.623" level="INFO">Successfully initialized new page object and opened url: https://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210308 15:35:26.405" endtime="20210308 15:35:29.624"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:26.405" endtime="20210308 15:35:29.624"></status>
</kw>
<kw name="Fazer login com" library="login">
<arguments>
<arg>${EMPTY}</arg>
<arg>senha1231</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>${email}</arg>
</arguments>
<msg timestamp="20210308 15:35:29.626" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20210308 15:35:29.625" endtime="20210308 15:35:29.654"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_password</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20210308 15:35:29.654" level="INFO">Fills the text 'senha1231' in the given field.</msg>
<status status="PASS" starttime="20210308 15:35:29.654" endtime="20210308 15:35:29.686"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=input[value="Log in"]</arg>
</arguments>
<status status="PASS" starttime="20210308 15:35:29.686" endtime="20210308 15:35:30.168"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:29.625" endtime="20210308 15:35:30.168"></status>
</kw>
<kw name="Mensagem de validacao login" library="login">
<arguments>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>${expect_arg}</arg>
</arguments>
<status status="PASS" starttime="20210308 15:35:30.170" endtime="20210308 15:35:30.447"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:30.169" endtime="20210308 15:35:30.447"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210308 15:35:30.813" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-52.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-52.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210308 15:35:30.448" endtime="20210308 15:35:30.813"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:26.404" endtime="20210308 15:35:30.813" critical="yes"></status>
</test>
<test id="s1-t5" name="Senha nÃ£o informada">
<kw name="Abrir pagina de login em headless" library="login">
<kw name="New Page" library="Browser">
<tags>
<tag>BrowserControl</tag>
<tag>Setter</tag>
</tags>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<arguments>
<arg>https://parodify.herokuapp.com/users/sign_in</arg>
</arguments>
<msg timestamp="20210308 15:35:34.191" level="INFO">Successfully initialized new page object and opened url: https://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210308 15:35:30.857" endtime="20210308 15:35:34.191"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:30.857" endtime="20210308 15:35:34.191"></status>
</kw>
<kw name="Fazer login com" library="login">
<arguments>
<arg>papito@parodify.com</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_email</arg>
<arg>${email}</arg>
</arguments>
<msg timestamp="20210308 15:35:34.195" level="INFO">Fills the text 'papito@parodify.com' in the given field.</msg>
<status status="PASS" starttime="20210308 15:35:34.194" endtime="20210308 15:35:34.246"></status>
</kw>
<kw name="Fill Text" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<arguments>
<arg>css=#user_password</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20210308 15:35:34.246" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20210308 15:35:34.246" endtime="20210308 15:35:34.268"></status>
</kw>
<kw name="Click" library="Browser">
<tags>
<tag>PageContent</tag>
<tag>Setter</tag>
</tags>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<arguments>
<arg>css=input[value="Log in"]</arg>
</arguments>
<status status="PASS" starttime="20210308 15:35:34.268" endtime="20210308 15:35:34.579"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:34.193" endtime="20210308 15:35:34.579"></status>
</kw>
<kw name="Mensagem de validacao login" library="login">
<arguments>
<arg>Opps! Dados de acesso incorretos!</arg>
</arguments>
<kw name="Get Text" library="Browser">
<tags>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
</tags>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<arguments>
<arg>css=.is-danger .message-body</arg>
<arg>==</arg>
<arg>${expect_arg}</arg>
</arguments>
<status status="PASS" starttime="20210308 15:35:34.580" endtime="20210308 15:35:34.835"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:34.580" endtime="20210308 15:35:34.836"></status>
</kw>
<kw name="Take Screenshot" library="Browser" type="teardown">
<tags>
<tag>PageContent</tag>
</tags>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210308 15:35:35.169" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-53.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-53.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210308 15:35:34.837" endtime="20210308 15:35:35.169"></status>
</kw>
<status status="PASS" starttime="20210308 15:35:30.851" endtime="20210308 15:35:35.169" critical="yes"></status>
</test>
<doc>Teste pÃ¡gina de Login</doc>
<status status="PASS" starttime="20210308 15:35:12.219" endtime="20210308 15:35:35.219"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">test1</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="Login">Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
