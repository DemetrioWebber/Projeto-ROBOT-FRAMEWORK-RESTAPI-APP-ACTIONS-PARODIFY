<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.2 on win32)" generated="20210308 16:38:34.294" rpa="false">
<suite id="s1" name="TestApiJson" source="C:\RobotFrameworkTests\RestAPI\TestCases\TestApiJson.robot">
<test id="s1-t1" name="Pegar_informação_estado">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>mysession</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20210308 16:38:34.578" level="INFO">Creating Session using : alias=mysession, url=https://restcountries.eu, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210308 16:38:34.578" endtime="20210308 16:38:34.578"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<arguments>
<arg>mysession</arg>
<arg>/rest/v2/alpha/BR</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210308 16:38:34.578" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20210308 16:38:35.095" level="INFO">GET Request : url=https://restcountries.eu/rest/v2/alpha/BR 
 path_url=/rest/v2/alpha/BR 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210308 16:38:35.095" level="INFO">GET Response : url=https://restcountries.eu/rest/v2/alpha/BR 
 status=200, reason= 
 headers={'Date': 'Mon, 08 Mar 2021 19:37:24 GMT', 'Content-Type': 'application/json;charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d967702c556a60c7c13ec5d059d3c77c91615232244; expires=Wed, 07-Apr-21 19:37:24 GMT; path=/; domain=.restcountries.eu; HttpOnly; SameSite=Lax, __cfduid=d56870317cd1ac9ef44a8acda12dfb57d1615232244; expires=Wed, 07-Apr-21 19:37:24 GMT; path=/; domain=.restcountries.eu; HttpOnly; SameSite=Lax', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET', 'Access-Control-Allow-Headers': 'Accept, X-Requested-With', 'Cache-Control': 'public, max-age=86400', 'CF-Cache-Status': 'DYNAMIC', 'cf-request-id': '08b4f1313d0000d525e589c000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Vy3IR4JCNILHo%2Fs8UWA6sg18xOZNJHFIgn6QO0uu%2ByGUIz49GYafezePw%2FIkSlP0vvEi39lbZVhlKLzfaIW0pwwjRFE0OwbveyQ8CTuBecYh"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Content-Encoding': 'gzip', 'Expect-CT': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"', 'Server': 'cloudflare', 'CF-RAY': '62ce84952969d525-MIA', 'alt-svc': 'h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400'} 
 body={"name":"Brazil","topLevelDomain":[".br"],"alpha2Code":"BR","alpha3Code":"BRA","callingCodes":["55"],"capital":"Brasília","altSpellings":["BR","Brasil","Federative Republic of Brazil","República Federativa do Brasil"],"region":"Americas","subregion":"South America","population":206135893,"latlng":[-10.0,-55.0],"demonym":"Brazilian","area":8515767.0,"gini":54.7,"timezones":["UTC-05:00","UTC-04:00","UTC-03:00","UTC-02:00"],"borders":["ARG","BOL","COL","GUF","GUY","PRY","PER","SUR","URY","VEN"],"nativeName":"Brasil","numericCode":"076","currencies":[{"code":"BRL","name":"Brazilian real","symbol":"R$"}],"languages":[{"iso639_1":"pt","iso639_2":"por","name":"Portuguese","nativeName":"Português"}],"translations":{"de":"Brasilien","es":"Brasil","fr":"Brésil","ja":"ブラジル","it":"Brasile","br":"Brasil","pt":"Brasil","nl":"Brazilië","hr":"Brazil","fa":"برزیل"},"flag":"https://restcountries.eu/data/bra.svg","regionalBlocs":[{"acronym":"USAN","name":"Union of South American Nations","otherAcronyms":["UNASUR","UNASUL","UZAN"],"otherNames":["Unión de Naciones Suramericanas","União de Nações Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],"cioc":"BRA"} 
 </msg>
<msg timestamp="20210308 16:38:35.095" level="INFO">c:\users\demetrio.santos\appdata\local\programs\python\python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'restcountries.eu'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20210308 16:38:35.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210308 16:38:34.578" endtime="20210308 16:38:35.095"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20210308 16:38:35.095" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20210308 16:38:35.095" level="INFO">To JSON using : content={"name":"Brazil","topLevelDomain":[".br"],"alpha2Code":"BR","alpha3Code":"BRA","callingCodes":["55"],"capital":"Brasília","altSpellings":["BR","Brasil","Federative Republic of Brazil","República Federativa do Brasil"],"region":"Americas","subregion":"South America","population":206135893,"latlng":[-10.0,-55.0],"demonym":"Brazilian","area":8515767.0,"gini":54.7,"timezones":["UTC-05:00","UTC-04:00","UTC-03:00","UTC-02:00"],"borders":["ARG","BOL","COL","GUF","GUY","PRY","PER","SUR","URY","VEN"],"nativeName":"Brasil","numericCode":"076","currencies":[{"code":"BRL","name":"Brazilian real","symbol":"R$"}],"languages":[{"iso639_1":"pt","iso639_2":"por","name":"Portuguese","nativeName":"Português"}],"translations":{"de":"Brasilien","es":"Brasil","fr":"Brésil","ja":"ブラジル","it":"Brasile","br":"Brasil","pt":"Brasil","nl":"Brazilië","hr":"Brazil","fa":"برزیل"},"flag":"https://restcountries.eu/data/bra.svg","regionalBlocs":[{"acronym":"USAN","name":"Union of South American Nations","otherAcronyms":["UNASUR","UNASUL","UZAN"],"otherNames":["Unión de Naciones Suramericanas","União de Nações Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],"cioc":"BRA"} </msg>
<msg timestamp="20210308 16:38:35.095" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20210308 16:38:35.095" level="INFO">${json_object} = {'name': 'Brazil', 'topLevelDomain': ['.br'], 'alpha2Code': 'BR', 'alpha3Code': 'BRA', 'callingCodes': ['55'], 'capital': 'Brasília', 'altSpellings': ['BR', 'Brasil', 'Federative Republic of Brazil', ...</msg>
<status status="PASS" starttime="20210308 16:38:35.095" endtime="20210308 16:38:35.095"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>$.name</arg>
</arguments>
<assign>
<var>${country_name}</var>
</assign>
<msg timestamp="20210308 16:38:35.111" level="INFO">${country_name} = ['Brazil']</msg>
<status status="PASS" starttime="20210308 16:38:35.095" endtime="20210308 16:38:35.111"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${country_name[0]}</arg>
</arguments>
<status status="PASS" starttime="20210308 16:38:35.111" endtime="20210308 16:38:35.126"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${country_name[0]}</arg>
<arg>Brazil</arg>
</arguments>
<status status="PASS" starttime="20210308 16:38:35.126" endtime="20210308 16:38:35.126"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>$.borders[0]</arg>
</arguments>
<assign>
<var>${country_borders}</var>
</assign>
<msg timestamp="20210308 16:38:35.142" level="INFO">${country_borders} = ['ARG']</msg>
<status status="PASS" starttime="20210308 16:38:35.126" endtime="20210308 16:38:35.142"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${country_borders[0]}</arg>
</arguments>
<status status="PASS" starttime="20210308 16:38:35.142" endtime="20210308 16:38:35.142"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>$.borders</arg>
</arguments>
<assign>
<var>${multiple_boarders}</var>
</assign>
<msg timestamp="20210308 16:38:35.179" level="INFO">${multiple_boarders} = [['ARG', 'BOL', 'COL', 'GUF', 'GUY', 'PRY', 'PER', 'SUR', 'URY', 'VEN']]</msg>
<status status="PASS" starttime="20210308 16:38:35.157" endtime="20210308 16:38:35.179"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${multiple_boarders[0]}</arg>
</arguments>
<status status="PASS" starttime="20210308 16:38:35.179" endtime="20210308 16:38:35.179"></status>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<arguments>
<arg>${multiple_boarders[0]}</arg>
<arg>ARG</arg>
<arg>BOL</arg>
<arg>COL</arg>
</arguments>
<status status="PASS" starttime="20210308 16:38:35.179" endtime="20210308 16:38:35.179"></status>
</kw>
<kw name="Should Not Contain Any" library="BuiltIn">
<doc>Fails if ``container`` contains one or more of the ``*items``.</doc>
<arguments>
<arg>${multiple_boarders[0]}</arg>
<arg>abc</arg>
<arg>VEN</arg>
</arguments>
<msg timestamp="20210308 16:38:35.179" level="FAIL">'['ARG', 'BOL', 'COL', 'GUF', 'GUY', 'PRY', 'PER', 'SUR', 'URY', 'VEN']' contains one or more of 'abc' or 'VEN'</msg>
<status status="FAIL" starttime="20210308 16:38:35.179" endtime="20210308 16:38:35.179"></status>
</kw>
<status status="FAIL" starttime="20210308 16:38:34.578" endtime="20210308 16:38:35.179" critical="yes">'['ARG', 'BOL', 'COL', 'GUF', 'GUY', 'PRY', 'PER', 'SUR', 'URY', 'VEN']' contains one or more of 'abc' or 'VEN'</status>
</test>
<status status="FAIL" starttime="20210308 16:38:34.309" endtime="20210308 16:38:35.179"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="1">Critical Tests</stat>
<stat pass="0" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" id="s1" name="TestApiJson">TestApiJson</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210308 16:38:34.578" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20210308 16:38:35.095" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
</errors>
</robot>
